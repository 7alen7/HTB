So I started doing this box by enumerating open ports with nmap. The only available ports seemed to be port 80 and port 22. Well alright, we don’t have any ssh credentials, so let’s go and open up the webpage. Upon opening the page, I find that it only says hello world. After inspecting the page source, I find that it talks about a nibbleblog directory, so let’s see if we can check that out. After navigating to the blog page, I noticed that it’s run by a php script with three parameters, controller, action, and category. For posterity’s sake, I ran dirbuster against the new nibbleblog directory. It’s running in the background now so I’ll come back to it later. It ended up finding some locations, mainly an admin.php page and both a /content/ folder and /admin/ folder. Let’s look into the content folder and see if it gets us any passwords. In /private/user.xml, it describes an account with the name of “admin”, but sadly it gives no password. Also, it tells us that our ip, 10.10.14.173, is blacklisted. Well that sucks. Config.xml gives us admin@nibbles.com, so that’s nice. Notifications.xml seems to give us some session cookies, so we’ll hang on to those. I messed around in the /admin/ folder, but couldn’t really find much. While dirbuster continued to run, I did find a README file in nibbleblog/, and opening it gave us a version number: 4.0.3. It seems that we can upload a file to nibbleblog and obtain a shell, but it’ll require us to be authenticated first. So here’s the annoying part of the lab. We have to guess what the admin password is. According to the description of the box on HTB, it’s not hard to surmise, but I won’t lie and say it took me a long time to get it. The password is nibbles. I will save you all the variations of ‘password’ that I went through. Now that we have a password, we can go ahead and upload a shell. After uploading the script from https://github.com/0xConstant/CVE-2015-6967, we get a shell! This logs us in as ‘nibbler’. Let’s see if we have any sudo permissions with sudo -l, and see if we can find user.txt. User.txt is in the usual spot, /home/nibbler/user.txt. With sudo, we can run the monitor script, found in /home/nibbler/personal/stuff/monitor.sh, as root. After a lot of messing around, I found that the script we used to get a reverse shell gave us one that does not allow us to leave the directory we start in and it doesn’t let us see the output or contents of some files. With that in mind, it’s time to look for another way to get a shell. I never looked into the admin dashboard any, let’s see if we can upload a php script and get a reverse shell that way! I chose to use a basic script, found at https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php. Upload that in the admin dashboard, under plugins, at the photo upload plugin. Don’t forget to change your ip and port in the script. Once that’s done, you can execute the php script by going to /content/plugins in the web page, look for the photo upload section then run the php script by clicking on it. Before you do this, don’t forget to have nc set up on your end with “nc -lvnp [port]”. Now we can unzip the file found in the home directory and read the monitor.sh file. With ls -l, we see that we’re able to write to this file. Since the root file is probably in the root directory, we don’t have to mess with spawning a root shell. Just use: echo “cat /root/root.txt > /tmp/readfile.txt” >> monitor.sh. This command being appended to the file will cause the script to read root.txt and output it to tmp, a folder that almost every user is readable and writable to. Once this is done, go to tmp and get your flag!
